<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yaolizh.oa.storegoods.dao.StoreGoodsDao">

	<select id="get" resultType="com.yaolizh.oa.storegoods.domain.StoreGoodsDO">
		select `id`,`code`,`name`,`model` from t_store_goods where id = #{value}
	</select>

	<select id="list" resultType="com.yaolizh.oa.storegoods.domain.StoreGoodsDO">
		select `id`,`code`,`name`,`model` from t_store_goods
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="code != null and code != ''"> and code = #{code} </if>
		  		  <if test="name != null and name != ''"> and name = #{name} </if>
		  		  <if test="model != null and model != ''"> and model = #{model} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from t_store_goods
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="code != null and code != ''"> and code = #{code} </if>
		  		  <if test="name != null and name != ''"> and name = #{name} </if>
		  		  <if test="model != null and model != ''"> and model = #{model} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.yaolizh.oa.storegoods.domain.StoreGoodsDO">
		insert into t_store_goods
		(
			`id`, 
			`code`, 
			`name`, 
			`model`
		)
		values
		(
			#{id}, 
			#{code}, 
			#{name}, 
			#{model}
		)
	</insert>
	 
	<update id="update" parameterType="com.yaolizh.oa.storegoods.domain.StoreGoodsDO">
		update t_store_goods 
		<set>
			<if test="code != null">`code` = #{code}, </if>
			<if test="name != null">`name` = #{name}, </if>
			<if test="model != null">`model` = #{model}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from t_store_goods where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from t_store_goods where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>